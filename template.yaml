AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  cloud-trader

  App that enables interaction with capital.com API for viewing market information, 
  execute trade transactions and develop automated trading strategies.

  IMPORTANT: This template/app assumes you have created the following Parameter Store parameters on aws with correct values:
  - /cloud-trader/capitalDemoUrl  -> Type STRING
  - /cloud-trader/identifier      -> Type STRING
  - /cloud-trader/key             -> Type SECURESTRING
  - /cloud-trader/password        -> Type SECURESTRING

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: nodejs18.x
    Timeout: 15 # TODO: Check if reduced time between 3 to 5 seconds would be sufficient.
    MemorySize: 128
    Architectures:
      - x86_64
    Layers:
      - !Ref ServicesLayer
    Environment:
      Variables:
        CT_IDENTIFIER: /cloud-trader/identifier # TODO: Each user would persist as account settings in DB
        CT_KEY: /cloud-trader/key # TODO: Each user would persist as account settings in DB
        CT_PASSWORD: /cloud-trader/password # TODO: Each user would persist as account settings in DB
        CT_DEMO_URL: /cloud-trader/capitalDemoUrl # TODO: Each user would persist as account settings in DB
        SESSION_ENDPOINT: /session
        SESSION_TABLE_NAME: Session
        SESSION_TABLE_KEY_VALUE: only1session
        MARKET_CATEGORIES_ENDPOINT: /marketnavigation

Resources:
  ############################################################################  ->  State Machines
  MarketCategoriesSM:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: MarketCategoriesSM
      DefinitionUri: state-machines/market-categories.asl.yaml
      Type: STANDARD
      DefinitionSubstitutions:
        StartCapitalSessionArn: !GetAtt StartCapitalSession.Arn
        GetDbSessionArn: !GetAtt GetDbSession.Arn
        ValidateSessionArn: !GetAtt ValidateSession.Arn
        SaveSessionArn: !GetAtt SaveSession.Arn
        GetMarketCategoriesArn: !GetAtt GetMarketCategories.Arn
      Events:
        GatewayTrigger:
          Type: Api
          Properties:
            Path: /market-categories
            Method: GET
            RestApiId: !Ref CloudTraderGateway
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref StartCapitalSession
        - LambdaInvokePolicy:
            FunctionName: !Ref GetDbSession
        - LambdaInvokePolicy:
            FunctionName: !Ref ValidateSession
        - LambdaInvokePolicy:
            FunctionName: !Ref SaveSession
        - LambdaInvokePolicy:
            FunctionName: !Ref GetMarketCategories

  GetMarketSubNodesSM:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: GetMarketSubNodesSM
      DefinitionUri: state-machines/market-sub-nodes.asl.yaml
      Type: STANDARD
      DefinitionSubstitutions:
        StartCapitalSessionArn: !GetAtt StartCapitalSession.Arn
        GetDbSessionArn: !GetAtt GetDbSession.Arn
        ValidateSessionArn: !GetAtt ValidateSession.Arn
        SaveSessionArn: !GetAtt SaveSession.Arn
        GetMarketSubNodesArn: !GetAtt GetMarketSubNodes.Arn
      Events:
        GatewayTrigger:
          Type: Api
          Properties:
            Path: /market-sub-nodes
            Method: GET
            RestApiId: !Ref CloudTraderGateway
      Policies:
        - LambdaInvokePolicy:
            FunctionName: !Ref StartCapitalSession
        - LambdaInvokePolicy:
            FunctionName: !Ref GetDbSession
        - LambdaInvokePolicy:
            FunctionName: !Ref ValidateSession
        - LambdaInvokePolicy:
            FunctionName: !Ref SaveSession
        - LambdaInvokePolicy:
            FunctionName: !Ref GetMarketSubNodes

  ############################################################################  ->  Lambda Functions
  StartCapitalSession:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: StartCapitalSession
      CodeUri: functions/capital/start-session/
      Handler: startSession.handler
      Policies:
        - !Ref ReadParameterStoreValues

  SaveSession:
    Type: AWS::Serverless::Function
    Connectors:
      ToSessionTable:
        Properties:
          Destination:
            Id: SessionTable
          Permissions:
            - Write
    Properties:
      FunctionName: SaveSession
      CodeUri: functions/db/save-session/
      Handler: saveSession.handler

  GetDbSession:
    Type: AWS::Serverless::Function
    Connectors:
      ToSessionTable:
        Properties:
          Destination:
            Id: SessionTable
          Permissions:
            - Read
    Properties:
      FunctionName: GetDbSession
      CodeUri: functions/db/get-session/
      Handler: getDbSession.handler

  ValidateSession:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: ValidateSession
      CodeUri: functions/capital/validate-session/
      Handler: validateSession.handler

  GetMarketCategories:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetMarketCategories
      CodeUri: functions/capital/markets/
      Handler: getMarketCategories.handler
      Policies:
        - !Ref ReadParameterStoreValues

  GetMarketSubNodes:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: GetMarketSubNodes
      CodeUri: functions/capital/markets/
      Handler: getMarketSubNodes.handler
      Policies:
        - !Ref ReadParameterStoreValues

  ############################################################################  ->  API Gateways
  CloudTraderGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: CloudTraderGateway
      StageName: dev

  ############################################################################  ->  Role/Policy for Lambda fn to use
  ReadParameterStoreValues: #--> Using explicit Policy definition. There is no standard Connector
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: ReadParameterStoreValues
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ssm:GetParameters
              - ssm:GetParameter
              - ssm:GetParametersByPath
              # - ssm:PutParameter
            Resource: "*"

  ############################################################################  ->  Layers
  ServicesLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: ServicesLayer
      Description: All AWS services and utility functions used by Cloud-Trader app.
      ContentUri: "./layers/services"
      CompatibleRuntimes:
        - nodejs18.x

  ############################################################################  ->  Dynamo DBs
  SessionTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: Session # MUST be thesame as SESSEION_TABLE_NAME enviromnent variable above!!!
      PrimaryKey: # { sessionID: 'only1session' }
        Name: sessionID
        Type: String
